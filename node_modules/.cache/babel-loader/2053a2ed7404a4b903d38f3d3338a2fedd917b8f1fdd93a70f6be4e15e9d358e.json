{"ast":null,"code":"var _jsxFileName = \"/mnt/e/algoquiz/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\n// src/pages/Quiz.js\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport quizData from \"../data/quizData.json\"; // Change to default import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // Assuming you want to access the \"C\" questions\n    setQuestions(quizData.C.easy); // Adjust this line to access the questions\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${index}` // Use index for unique names\n                ,\n                id: `answer-${optionIndex}` // Use optionIndex for unique IDs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `answer-${optionIndex}`,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this)]\n            }, optionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","quizData","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","C","easy","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","options","option","optionIndex","type","name","id","htmlFor","_c","$RefreshReg$"],"sources":["/mnt/e/algoquiz/src/pages/Quiz.js"],"sourcesContent":["// src/pages/Quiz.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport quizData from \"../data/quizData.json\"; // Change to default import\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Assuming you want to access the \"C\" questions\r\n    setQuestions(quizData.C.easy); // Adjust this line to access the questions\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main>\r\n        <h2>Quiz Page</h2>\r\n        {questions.length > 0 ? (\r\n          <ul>\r\n            {questions.map((question, index) => (\r\n              <li key={index}> {/* Use index if there is no id */}\r\n                <h3>{question.question}</h3>\r\n                <ul>\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <li key={optionIndex}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${index}`} // Use index for unique names\r\n                        id={`answer-${optionIndex}`} // Use optionIndex for unique IDs\r\n                      />\r\n                      <label htmlFor={`answer-${optionIndex}`}>\r\n                        {option}\r\n                      </label>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAU,YAAY,CAACN,QAAQ,CAACO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACJ,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVX,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBR,SAAS,CAACS,MAAM,GAAG,CAAC,gBACnBZ,OAAA;QAAAO,QAAA,EACGJ,SAAS,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7Bf,OAAA;UAAAO,QAAA,GAAgB,GAAC,eACfP,OAAA;YAAAO,QAAA,EAAKO,QAAQ,CAACA;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BX,OAAA;YAAAO,QAAA,EACGO,QAAQ,CAACE,OAAO,CAACH,GAAG,CAAC,CAACI,MAAM,EAAEC,WAAW,kBACxClB,OAAA;cAAAO,QAAA,gBACEP,OAAA;gBACEmB,IAAI,EAAC,OAAO;gBACZC,IAAI,EAAE,YAAYL,KAAK,EAAG,CAAC;gBAAA;gBAC3BM,EAAE,EAAE,UAAUH,WAAW,EAAG,CAAC;cAAA;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B,CAAC,eACFX,OAAA;gBAAOsB,OAAO,EAAE,UAAUJ,WAAW,EAAG;gBAAAX,QAAA,EACrCU;cAAM;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA,GARDO,WAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAShB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAfEI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELX,OAAA;QAAAO,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPX,OAAA,CAACH,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACT,EAAA,CA1CID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}