{"ast":null,"code":"var _jsxFileName = \"/mnt/e/algoquiz/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport quizData from '../data/quizData.json'; // Import the quiz data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const categories = Object.keys(quizData); // Dynamically get categories\n\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setSelectedLevel(null); // Reset level when category changes\n    setSubmitted(false); // Reset submission state\n    setScore(0); // Reset score\n  };\n  const handleLevelSelect = level => {\n    setSelectedLevel(level);\n    setSubmitted(false); // Reset submission state\n    setScore(0); // Reset score\n  };\n  useEffect(() => {\n    if (selectedCategory && selectedLevel) {\n      setQuestions(quizData[selectedCategory][selectedLevel]);\n      setAnswers({}); // Reset answers\n    }\n  }, [selectedCategory, selectedLevel]);\n  const handleAnswerChange = (questionIndex, option) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: option\n    });\n  };\n  const handleSubmit = () => {\n    let newScore = 0;\n    questions.forEach((question, index) => {\n      if (answers[index] === question.answer) {\n        newScore += 1;\n      }\n    });\n    setScore(newScore);\n    setSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), !selectedCategory ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCategorySelect(category),\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : !selectedLevel ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Select a Level for \", selectedCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(quizData[selectedCategory]).map(level => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLevelSelect(level),\n              children: level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedCategory, \" - \", selectedLevel, \" Quiz\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleSubmit();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${index}`,\n                    id: `correct_answer-${index}-${optionIndex}`,\n                    value: option,\n                    onChange: () => handleAnswerChange(index, option)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `correct_answer-${index}-${optionIndex}`,\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 29\n                  }, this)]\n                }, optionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Score: \", score, \" / \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"Cw5hLrMboncFeVwHpFy7yj/hZx8=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","quizData","jsxDEV","_jsxDEV","Quiz","_s","selectedCategory","setSelectedCategory","selectedLevel","setSelectedLevel","questions","setQuestions","answers","setAnswers","submitted","setSubmitted","score","setScore","categories","Object","keys","handleCategorySelect","category","handleLevelSelect","level","handleAnswerChange","questionIndex","option","handleSubmit","newScore","forEach","question","index","answer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","length","onSubmit","e","preventDefault","options","optionIndex","type","name","id","value","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/mnt/e/algoquiz/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport quizData from '../data/quizData.json'; // Import the quiz data\r\n\r\nconst Quiz = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedLevel, setSelectedLevel] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const categories = Object.keys(quizData); // Dynamically get categories\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    setSelectedLevel(null); // Reset level when category changes\r\n    setSubmitted(false); // Reset submission state\r\n    setScore(0); // Reset score\r\n  };\r\n\r\n  const handleLevelSelect = (level) => {\r\n    setSelectedLevel(level);\r\n    setSubmitted(false); // Reset submission state\r\n    setScore(0); // Reset score\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCategory && selectedLevel) {\r\n      setQuestions(quizData[selectedCategory][selectedLevel]);\r\n      setAnswers({}); // Reset answers\r\n    }\r\n  }, [selectedCategory, selectedLevel]);\r\n\r\n  const handleAnswerChange = (questionIndex, option) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionIndex]: option,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let newScore = 0;\r\n    questions.forEach((question, index) => {\r\n      if (answers[index] === question.answer) {\r\n        newScore += 1;\r\n      }\r\n    });\r\n    setScore(newScore);\r\n    setSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <main>\r\n        <h2>Quiz Page</h2>\r\n        {!selectedCategory ? (\r\n          <div>\r\n            <h3>Select a Category</h3>\r\n            <ul>\r\n              {categories.map((category) => (\r\n                <li key={category}>\r\n                  <button onClick={() => handleCategorySelect(category)}>\r\n                    {category}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : !selectedLevel ? (\r\n          <div>\r\n            <h3>Select a Level for {selectedCategory}</h3>\r\n            <ul>\r\n              {Object.keys(quizData[selectedCategory]).map((level) => (\r\n                <li key={level}>\r\n                  <button onClick={() => handleLevelSelect(level)}>\r\n                    {level}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h3>{selectedCategory} - {selectedLevel} Quiz</h3>\r\n            {questions.length > 0 ? (\r\n              <form onSubmit={(e) => { e.preventDefault(); handleSubmit(); }}>\r\n                <ul>\r\n                  {questions.map((question, index) => (\r\n                    <li key={index}>\r\n                      <h3>{question.question}</h3>\r\n                      <ul>\r\n                        {question.options.map((option, optionIndex) => (\r\n                          <li key={optionIndex}>\r\n                            <input\r\n                              type=\"radio\"\r\n                              name={`question-${index}`}\r\n                              id={`correct_answer-${index}-${optionIndex}`}\r\n                              value={option}\r\n                              onChange={() => handleAnswerChange(index, option)}\r\n                            />\r\n                            <label htmlFor={`correct_answer-${index}-${optionIndex}`}>\r\n                              {option}\r\n                            </label>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <button type=\"submit\">Submit Answers</button>\r\n              </form>\r\n            ) : (\r\n              <p>Loading...</p>\r\n            )}\r\n            {submitted && (\r\n              <div>\r\n                <h3>Your Score: {score} / {questions.length}</h3>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMqB,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACnB,QAAQ,CAAC,CAAC,CAAC;;EAE1C,MAAMoB,oBAAoB,GAAIC,QAAQ,IAAK;IACzCf,mBAAmB,CAACe,QAAQ,CAAC;IAC7Bb,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxBM,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrBE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,MAAMM,iBAAiB,GAAIC,KAAK,IAAK;IACnCf,gBAAgB,CAACe,KAAK,CAAC;IACvBT,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrBE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIQ,gBAAgB,IAAIE,aAAa,EAAE;MACrCG,YAAY,CAACV,QAAQ,CAACK,gBAAgB,CAAC,CAACE,aAAa,CAAC,CAAC;MACvDK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACP,gBAAgB,EAAEE,aAAa,CAAC,CAAC;EAErC,MAAMiB,kBAAkB,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IACpDd,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACc,aAAa,GAAGC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,QAAQ,GAAG,CAAC;IAChBnB,SAAS,CAACoB,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACrC,IAAIpB,OAAO,CAACoB,KAAK,CAAC,KAAKD,QAAQ,CAACE,MAAM,EAAE;QACtCJ,QAAQ,IAAI,CAAC;MACf;IACF,CAAC,CAAC;IACFZ,QAAQ,CAACY,QAAQ,CAAC;IAClBd,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA;IAAA+B,QAAA,gBACE/B,OAAA,CAACJ,MAAM;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjB,CAAChC,gBAAgB,gBAChBH,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnC,OAAA;UAAA+B,QAAA,EACGhB,UAAU,CAACqB,GAAG,CAAEjB,QAAQ,iBACvBnB,OAAA;YAAA+B,QAAA,eACE/B,OAAA;cAAQqC,OAAO,EAAEA,CAAA,KAAMnB,oBAAoB,CAACC,QAAQ,CAAE;cAAAY,QAAA,EACnDZ;YAAQ;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAHFhB,QAAQ;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,GACJ,CAAC9B,aAAa,gBAChBL,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,GAAI,qBAAmB,EAAC5B,gBAAgB;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CnC,OAAA;UAAA+B,QAAA,EACGf,MAAM,CAACC,IAAI,CAACnB,QAAQ,CAACK,gBAAgB,CAAC,CAAC,CAACiC,GAAG,CAAEf,KAAK,iBACjDrB,OAAA;YAAA+B,QAAA,eACE/B,OAAA;cAAQqC,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACC,KAAK,CAAE;cAAAU,QAAA,EAC7CV;YAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC,GAHFd,KAAK;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAENnC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,GAAK5B,gBAAgB,EAAC,KAAG,EAACE,aAAa,EAAC,OAAK;QAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjD5B,SAAS,CAAC+B,MAAM,GAAG,CAAC,gBACnBtC,OAAA;UAAMuC,QAAQ,EAAGC,CAAC,IAAK;YAAEA,CAAC,CAACC,cAAc,CAAC,CAAC;YAAEhB,YAAY,CAAC,CAAC;UAAE,CAAE;UAAAM,QAAA,gBAC7D/B,OAAA;YAAA+B,QAAA,EACGxB,SAAS,CAAC6B,GAAG,CAAC,CAACR,QAAQ,EAAEC,KAAK,kBAC7B7B,OAAA;cAAA+B,QAAA,gBACE/B,OAAA;gBAAA+B,QAAA,EAAKH,QAAQ,CAACA;cAAQ;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5BnC,OAAA;gBAAA+B,QAAA,EACGH,QAAQ,CAACc,OAAO,CAACN,GAAG,CAAC,CAACZ,MAAM,EAAEmB,WAAW,kBACxC3C,OAAA;kBAAA+B,QAAA,gBACE/B,OAAA;oBACE4C,IAAI,EAAC,OAAO;oBACZC,IAAI,EAAE,YAAYhB,KAAK,EAAG;oBAC1BiB,EAAE,EAAE,kBAAkBjB,KAAK,IAAIc,WAAW,EAAG;oBAC7CI,KAAK,EAAEvB,MAAO;oBACdwB,QAAQ,EAAEA,CAAA,KAAM1B,kBAAkB,CAACO,KAAK,EAAEL,MAAM;kBAAE;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnD,CAAC,eACFnC,OAAA;oBAAOiD,OAAO,EAAE,kBAAkBpB,KAAK,IAAIc,WAAW,EAAG;oBAAAZ,QAAA,EACtDP;kBAAM;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC;gBAAA,GAVDQ,WAAW;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAWhB,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA,GAjBEN,KAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLnC,OAAA;YAAQ4C,IAAI,EAAC,QAAQ;YAAAb,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,gBAEPnC,OAAA;UAAA+B,QAAA,EAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACjB,EACAxB,SAAS,iBACRX,OAAA;UAAA+B,QAAA,eACE/B,OAAA;YAAA+B,QAAA,GAAI,cAAY,EAAClB,KAAK,EAAC,KAAG,EAACN,SAAS,CAAC+B,MAAM;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPnC,OAAA,CAACH,MAAM;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACjC,EAAA,CA3HID,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AA6HV,eAAeA,IAAI;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}